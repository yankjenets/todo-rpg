RPG.do grading help file

Daniel Deutsch - ddeutsch
Michael Hankowsky - mhankows
Tyler Healy - thealy

Required Elements:

1. Javascript
	- javascript was used for all main functionality in todo.js and app.js
	- Examples of javascript objects
		- data - used as a dictionary that stores a user data in todo.js
		- similarly, localData stores multiple clients data locally in app.js 
		- DynamicText - todo.js:63-79
	
2. Canvas
	- UI contains a canvas with animated text and a clock that shows the current time
	- Code:
		- todo.js:26-154
	
3. HTML
	- Main content is created through HTML, either expressly in index.html, or through JQuery DOM manipulation in todo.js
	- A form with validation is used for login and can be seen in index.html:23-28
	
4. CSS
	- CSS was used to stylize the presentation of our application in style.css
	- A reset was used: reset.css
	- Advanced CSS techniques used:
		- hover - style.css:38
		- z-index - style.css:59
		
5-6. DOM Manipulation, JQuery
	- JQuery and DOM Manipulation is used throughout todo.js to add objects and change their appearance in real time
	- Code including DOM Manipulation and JQuery:
		- todo.js:157-317
		
7. AJAX Client
	- AJAX was used to communicate requests with the server, and the share data between the client and server
	- AJAX Client code:
		- todo.js:440-608
		
8. AJAX Server
	- AJAX was used to store and persist data in text files and to communicate this data with clients
	- AJAX server code uses node
	- Server code is in app.js
	
Design Process, User Testing and Iterative Design:

Here is an outline of our design process and iterative design. To assist in the description, I will make reference to screenshots in the screenies folder that were taken throughout the process of creating this app as evidence to our iterative process.

- Initial Design:
	- Our initial design focused on a clean, simple look that was easy to understand and use. We wanted a menu bar that contained the title of our app, as well as the user information (such as level and points). Then below the menu bar would be a form for creating new tasks, and then the list of tasks. Our initial main screen design can be seen in Design1.png.
	- The next step in improving the overall look and feel of this main screen was to improve the menu bar. These improvements can be seen in Design2.png.
	
- Login Design:
	- Once the main design was established, we needed to add a way for users to register and login. Initially, we added a form that was placed over the rest of the page. This form looked decent, but being able to see other elements of the main page was an eyesore. The initial login screen can be seen in Design3.png.
	
- Finished/Delete Functionality:
	- Once the functionality to delete and complete tasks were added, we needed to add a way to distinguish completed tasks from ones that still need to be completed. Our design choice for this can be seen in Design4.png.
	- Our initial canvas design which displays animated text as well as the current time can also be seen in Design4.png.
	
- Achievements
	- The initial design for our achievements page is shown in Design5
	- Our final design produced after user testing is shown in Design6
	
- User Testing:
	- We received the following user feedback during user testing:
		* If username/password incorrect, all fields should not reset
		* Buttons should change on hover
		* Default date (of today) should be added to created tasks
		* Animations stopped in weird place covering time
		* Canvas should be cleared on re-login
		* Task can be added with empty title
	* Anything with a star has been addressed and fixed in our final project 
	
- Final Product:
	- After making our own design changes, and taking into account the opinions of this users who tested our product, our final designs are expressed in Design7 and Design8.